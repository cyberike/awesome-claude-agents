from PyQt5.QtWidgets import QMainWindow, QTextEdit, QPushButton, QVBoxLayout, QWidget\n\nclass MainWindow(QMainWindow):\n    def __init__(self, model_agent, voice_agent, git_agent):\n        super().__init__()\n        self.model_agent = model_agent\n        self.voice_agent = voice_agent\n        self.git_agent = git_agent\n        self.init_ui()\n\n    def init_ui(self):\n        central_widget = QWidget()\n        layout = QVBoxLayout()\n\n        self.text_edit = QTextEdit()\n        layout.addWidget(self.text_edit)\n\n        voice_button = QPushButton("Speak")\n        voice_button.clicked.connect(self.handle_voice_input)\n        layout.addWidget(voice_button)\n\n        generate_button = QPushButton("Generate")\n        generate_button.clicked.connect(self.generate_response)\n        layout.addWidget(generate_button)\n\n        commit_button = QPushButton("Commit Changes")\n        commit_button.clicked.connect(self.commit_changes)\n        layout.addWidget(commit_button)\n\n        central_widget.setLayout(layout)\n        self.setCentralWidget(central_widget)\n\n    def handle_voice_input(self):\n        text = self.voice_agent.listen()\n        if text:\n            self.text_edit.append(text)\n\n    def generate_response(self):\n        prompt = self.text_edit.toPlainText()\n        response = self.model_agent.generate_response(prompt)\n        self.text_edit.append(f"Assistant: {response}")\n        self.voice_agent.speak(response)\n\n    def commit_changes(self):\n        self.git_agent.commit_changes("Update from UI")\n        self.git_agent.push_changes()